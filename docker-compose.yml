version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: baseball_db
    environment:
      POSTGRES_DB: baseball_db
      POSTGRES_USER: baseball_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secure_password_123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U baseball_user -d baseball_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Baseball Stats Application
  app:
    build: .
    container_name: baseball_app
    environment:
      DATABASE_URL: postgresql://baseball_user:${DB_PASSWORD:-secure_password_123}@postgres:5432/baseball_db
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      FLASK_ENV: production
      FLASK_DEBUG: False
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: baseball_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    restart: unless-stopped

volumes:
  postgres_data:
